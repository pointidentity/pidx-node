// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hypersign/ssi/v1/client_spec.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClientSpecType int32

const (
	CLIENT_SPEC_TYPE_NONE              ClientSpecType = 0
	CLIENT_SPEC_TYPE_COSMOS_ADR036     ClientSpecType = 1
	CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN ClientSpecType = 2
)

var ClientSpecType_name = map[int32]string{
	0: "CLIENT_SPEC_TYPE_NONE",
	1: "CLIENT_SPEC_TYPE_COSMOS_ADR036",
	2: "CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN",
}

var ClientSpecType_value = map[string]int32{
	"CLIENT_SPEC_TYPE_NONE":              0,
	"CLIENT_SPEC_TYPE_COSMOS_ADR036":     1,
	"CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN": 2,
}

func (x ClientSpecType) String() string {
	return proto.EnumName(ClientSpecType_name, int32(x))
}

func (ClientSpecType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a848eb261a345f1b, []int{0}
}

func init() {
	proto.RegisterEnum("pointidentity.ssi.v1.ClientSpecType", ClientSpecType_name, ClientSpecType_value)
}

func init() {
	proto.RegisterFile("pointidentity/ssi/v1/client_spec.proto", fileDescriptor_a848eb261a345f1b)
}

var fileDescriptor_a848eb261a345f1b = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xca, 0xa8, 0x2c, 0x48,
	0x2d, 0x2a, 0xce, 0x4c, 0xcf, 0xd3, 0x2f, 0x2e, 0xce, 0xd4, 0x2f, 0x33, 0xd4, 0x4f, 0xce, 0xc9,
	0x4c, 0xcd, 0x2b, 0x89, 0x2f, 0x2e, 0x48, 0x4d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x80, 0xab, 0xd1, 0x2b, 0x2e, 0xce, 0xd4, 0x2b, 0x33, 0x94, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07,
	0x4b, 0xea, 0x83, 0x58, 0x10, 0x75, 0x5a, 0xb5, 0x5c, 0x7c, 0xce, 0x60, 0xcd, 0xc1, 0x05, 0xa9,
	0xc9, 0x21, 0x95, 0x05, 0xa9, 0x42, 0x92, 0x5c, 0xa2, 0xce, 0x3e, 0x9e, 0xae, 0x7e, 0x21, 0xf1,
	0xc1, 0x01, 0xae, 0xce, 0xf1, 0x21, 0x91, 0x01, 0xae, 0xf1, 0x7e, 0xfe, 0x7e, 0xae, 0x02, 0x0c,
	0x42, 0x4a, 0x5c, 0x72, 0x18, 0x52, 0xce, 0xfe, 0xc1, 0xbe, 0xfe, 0xc1, 0xf1, 0x8e, 0x2e, 0x41,
	0x06, 0xc6, 0x66, 0x02, 0x8c, 0x42, 0x6a, 0x5c, 0x4a, 0x18, 0x6a, 0x5c, 0x43, 0x3c, 0xe2, 0x03,
	0x5c, 0x83, 0x82, 0xfd, 0xfd, 0x1c, 0x7d, 0xe2, 0x83, 0x3d, 0xdd, 0xfd, 0x04, 0x98, 0xa4, 0x58,
	0x3a, 0x16, 0xcb, 0x31, 0x38, 0xf9, 0x9c, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83,
	0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43,
	0x94, 0x51, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x3e, 0xdc, 0x2f, 0xba,
	0x60, 0x47, 0x27, 0xe7, 0xe7, 0xe8, 0x67, 0x64, 0xa6, 0xe8, 0xe6, 0xe5, 0xa7, 0xa4, 0xea, 0x57,
	0x80, 0xc3, 0xa0, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0x2c, 0x6d, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x30, 0xa2, 0x76, 0x7f, 0x21, 0x01, 0x00, 0x00,
}
